name: CI

on:
  push:
    branches: [ master, main, release ]
  pull_request:
    branches: [ master, main, release ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: trip_mate
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: postgresql://postgres:mysecretpassword@localhost:5432/trip_mate
      DIRECT_URL: postgresql://postgres:mysecretpassword@localhost:5432/trip_mate
      JWT_SECRET: dummy_jwt_secret_for_ci
      JWT_REFRESH_SECRET: dummy_jwt_refresh_secret_for_ci
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready!" && break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Install dependencies
        run: npm ci

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy

      - name: Seed Database
        run: npx prisma db seed

      - name: Generate Prisma client
        run: npm run prisma:generate

      - name: Lint code
        run: npm run lint

      - name: Run unit & integration tests with coverage
        run: npm run test:cov

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Build project
        run: npm run build

      # Upload coverage report as artifact
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      # Optional: Upload to Codecov for better visualization
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: trip-mate-coverage
          fail_ci_if_error: false

      # Optional: Add coverage comment to PR
      - name: Jest Coverage Comment
        uses: ArtiomTr/jest-coverage-report-action@v2
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: ./coverage/coverage-final.json